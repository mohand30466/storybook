const test = require('tape')
const ploy = require('../../')
const fs = require('fs')
const { join } = require('path')

test('watch files and exec fn', t => {
  const a = join(__dirname, 'files/a.js')
  const updateFile = () => fs.writeFileSync(a, fs.readFileSync(a))

  ploy.set({
    cwd: __dirname,
    tasks: {
      watchSomeFiles: {
        val: () => ({ done: true }),
        watch: [ 'files/a.js' ]
      }
    }
  })

  t.plan(2)

  const watchSomeFiles = ploy.get(['tasks', 'watchSomeFiles'], {})
  const done = watchSomeFiles.get('done', {})
  var previous = done.compute()

  done
    .once(done => previous < (previous = done.compute()))
    .then(() => t.pass('fires after file update'))
    .then(() => {
      watchSomeFiles.set({ watch: null })

      done
        .once(done => previous < done.compute())
        .then(() => t.fail('should not fire'))

      setTimeout(updateFile, 100)

      setTimeout(() => {
        t.pass('did not fire again')
        ploy.tasks.set({}, false, true)
      }, 500)
    })

  setTimeout(updateFile, 100)
})

test('watch folder and exec fn', { timeout: 2000 }, t => {
  const a = join(__dirname, 'files/a.js')
  const updateFile = () => fs.writeFileSync(a, fs.readFileSync(a))

  ploy.set({
    cwd: __dirname,
    tasks: {
      watchSomeFiles: {
        val: () => ({ done: true }),
        watch: [ 'files' ]
      }
    }
  }, __dirname)

  const watchSomeFiles = ploy.get(['tasks', 'watchSomeFiles'], {})
  const done = watchSomeFiles.get('done', {})
  var previous = done.compute()

  done
    .once(done => previous < (previous = done.compute()))
    .then(() => t.pass('fires after file update'))
    .then(() => {
      watchSomeFiles.set({ watch: null })
      done
        .once(done => previous !== done.compute())
        .then(() => t.fail('should not fire'))

      setTimeout(() => {
        updateFile()

        setTimeout(() => {
          ploy.tasks.set({
            reset: true
          })
          setTimeout(() => {
            t.pass('did not fire again')
            t.end()
          }, 100)
        }, 500)
      }, 100)
    })

  setTimeout(updateFile, 100)
})

