const test = require('tape')
const ploy = require('../../../')
const nowDeploy = require('../')

test.onFinish(() => process.exit())

// test('now deploy', t => {
//   ploy.set({
//     cwd: __dirname,
//     tasks: {
//       inject: [ nowDeploy ],
//       nowDeploy: {
//         type: 'now-deploy',
//         options: {
//           package: {
//             name: 'my-instant-deployment',
//             dependencies: {
//               'sign-bunny': '1.0.0'
//             },
//             scripts: {
//               start: 'node index'
//             }
//           },
//           'index.js':
//             'require("http").Server((req, res) => {' +
//               'res.setHeader("Content-Type", "text/plain; charset=utf-8");' +
//               'res.end(require("sign-bunny")("Hi there!"));' +
//             '}).listen();'
//         }
//       }
//     }
//   })

//   ploy.get('done', {}).on(data => console.log(ploy.get(['tasks', 'nowDeploy', 'result'], {}).serialize(true)))
//   ploy.on('error', data => console.log(data))
// })

// test('now deploy using entry only', t => {
//   ploy.set({
//     cwd: __dirname,
//     tasks: {
//       inject: [ nowDeploy ],
//       'deploy-server': {
//         type: 'now-deploy',
//         options: './files/server'
//       }
//     }
//   })

//   ploy.get('done', {}).on(data => console.log(ploy.get(['tasks', 'nowDeploy', 'result'], {}).serialize(true)))
//   ploy.on('error', data => console.log(data))
// })
