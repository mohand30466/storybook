const { compile } = require('google-closure-compiler-js')
// const out = compile(flags);
// console.info(out.compiledCode);  // will print 'var x = 3;\n'

console.log('ðŸ¤ ðŸ¤ ðŸ¤ ðŸ¤ ðŸ¤ ðŸ¤ ðŸ¤ ')

exports.types = {
  'minify': {
    val (task, hub, cwd) {
      console.log('???')
      const file = task.get([ 'options', 'file', 'compute' ])
      const kb = Buffer.byteLength(file, 'utf8')
      console.log('minify', ~~(kb / 1024), 'kb')
      var start = Date.now()
      const flags = { jsCode: [{ src: file }] }
      const result = compile(flags).compiledCode
      const rkb = Buffer.byteLength(result, 'utf8')
      console.log(
        'compiled in', ~~((Date.now() - start) / 1e3), 'seconds',
        'saved', ~~(100 - (rkb / kb) * 100), '%',
        ' result', ~~(rkb / 1024), 'kb'
      )
      if (!result) {
        console.log('error cannot minify', file.slice(0, 100) + '...')
      } else {
        task.set({
          result,
          done: true
        })
      }
    }
  }
}
