const fs = require('fs')

// prep -- pre link
// deep linker
// const nodemodules = join(play, 'node_modules')
// fs.stat(nodemodules, (err) => {
//   if (!err) {
//     fs.readdir(join(play, 'node_modules'), (err, list) => {
//       if (!err) {
//         list.forEach(val => {
//           try {
//             fs.statSync(cwd + '/node_modules/' + val)
//           } catch (e) {
//             try {
//               fs.symlinkSync(play + 'node_modules/' + val, cwd + '/node_modules/' + val)
//             } catch (e) {

//             }
//           }
//         })
//       }
//       exec()
//     })
//   } else {
//     exec()
//   }
// })

// gaurd vs double injects
const flatNodemoules = {
  tasks: {
    'flat-nodemodules': {
      val: task => {
        //links and version are tricky collect all and just link to the newest or to the linked ones?
        console.log('go and flatten those modules')
        // lullz
      }
    }
  }
}

module.exports = flatNodemoules
