#!/usr/bin/env node

const { join, isAbsolute } = require('path')
const stamp = require('stamp').create()
const task = require('../')
const fs = require('fs')
const args = process.argv
const cwd = process.cwd()
const arg = arg => {
  for (var i = 0, values; i < args.length; i++) {
    if (values) {
      if (args[i][0] === '-') break
      else values.push(args[i])
    } else if (args[i] === arg) {
      values = []
    }
  }
  return values
}

;(arg('-c') || arg('--config') || ['task.config.js']).forEach(config => {
  if (!isAbsolute(config)) {
    config = join(cwd, config)
  }

  if (fs.existsSync(config)) {
    console.log('reading tasks from', config)
    task.set({
      tasks: {
        [config]: require(config)
      }
    }, stamp)
  } else {
    console.log('WARNING: config file does not exist:', config)
  }
})

let hasTask = false
if (task.tasks) {
  task.tasks.forEach(() => (hasTask = true))
}
if (!hasTask) {
  throw Error('no task to execute')
}

const watch = arg('-w') || arg('--watch')

if (!watch) task.get('done', {}).on(() => process.exit())

task.on('error', err => {
  if (watch) {
    console.log('task error:', err)
  } else {
    throw err
  }
})
